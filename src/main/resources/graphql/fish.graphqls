
enum WaterType {
	SEA,
	FRESH
}

type Family {
	id: ID!
	name: String
	waterType: WaterType
	fishs: [Fish!]
}

type Fish {
	id: ID!
	name: String
	temperature: Int
	price: Float
	family: Family
}

input PaginationInput {
	first: Int
	offset: Int
}

input CursorInput {
	first: Int
	after: Int
}

type Query {
	mostExpensiveFish: Fish
	fishByName(name: String): Fish
	findFishWithPagination(pagination: PaginationInput): [Fish]
	findFishWithCursor(pagination: CursorInput): [Fish]
}

type Mutation {
	createFamily(name: String, waterType: WaterType): Family
}
